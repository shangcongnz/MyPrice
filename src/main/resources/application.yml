# 项目相关配置
my-price-config:
  #名称
  name: MyPrice
  #版本
  version: 1.2
  #版权年份
  copyright-year: 2021
  #邮件功能
  #邮箱发送smtp
  email-smtp: smtp.163.com
  #邮箱发送端口
  email-port: 465
  #发送邮箱登录账号
  email-account: myprice.nz@outlook.com
  #发送邮箱登录密码
  email-password: tang3zang
  #实例演示开关 启动该模式删除增加修改会弹出演示模式提示框
  demo-enabled: false
  #漂亮得拖动验证码 默认false普通验证码、true滚动验证码
  roll-verification: false
#tomcat config
server :
  port : 8080
  ##项目名字配置
  #servlet :
  #  context-path : /demo
  tomcat :
    uri-encoding : UTF-8
    #shiro 报错修改的地方
    max-connections: 200000
    max-http-form-post-size: 9000000
    threads:
      max: 128
      min-spare: 5
spring :
  # 环境 dev|test|prod
  profiles :
    active : dev
    #引入其他配置文件，例如ftpHX 未配置文件application-ftpHX.yml
    #include: ftpHX,ftpCloud
  servlet:
    multipart:
      #设置总上传的数据大小
      max-request-size: 100MB
      #单个文件大小
      maxFileSize : 30MB
        #shiro 报错修改的地方
    max-connections: 200000
    max-http-post-size: 9000000
  #热部署模块
  devtools:
    restart:
      #热部署开关
      enabled: true
      #指定热部署的目录
      additional-paths: src/main/java
      #指定目录不更新
      exclude: test/**
  mvc:   #静态文件
    static-path-pattern : /static/**
  #模板引擎
  thymeleaf:
    model: HTML5
    prefix: classpath:/templates/
    suffix: .html
    #指定编码
    encoding: utf-8
    #禁用缓存 默认false
    cache: false
  jackson:
    time-zone: GMT+12
    date-format: yyyy-MM-dd HH:mm:ss
  redis:
    ssl: false
    database: 0
    host: RHEL7
    port: 6379
    password: 
    timeout: 1000
    lettuce:
      pool:
        max-active: 200
        max-wait: -1
        max-idle: 10
        min-idle: 0
#    cluster:
#      nodes: RHEL7:6380,RHEL7:6381
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
#spring.redis.host=localhost # Redis server host.
#spring.redis.password= # Login password of the redis server.
#spring.redis.ssl=false # Enable SSL support.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.port=6379 # Redis server port.
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds     
      
      
#    master: 
#      ssl: false
#      database: 0
#      host: RHEL7
#      port: 6379
#      password: 
#      timeout: 1000
#      lettuce:
#        pool:
#          max-active: 200
#          max-wait: -1
#          max-idle: 10
#          min-idle: 0
#    slaves:
#      - host: RHEL7
#        port: 6380
#      - host: RHEL7
#        port: 6381
#mybatis:
#  #配置mapper的扫描，找到所有的mapper.xml映射文件
#  mapperLocations : classpath*:mybatis/*/*.xml
#  #mybatis提供三种sql执行器，分别是SIMPLE、REUSE、BATCH。
#  executor-type : reuse
#  #搜索指定包别名
#  typeAliasesPackage : com.*.model
#  #该配置项就是指将带有下划线的表字段映射为驼峰格式的实体类属性。
#  configuration :
#    map-underscore-to-camel-case : true
#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
oss:
  enable: true
  info: true
  path-style-access: false  #使用云OSS 需要关闭
  endpoint: http://127.0.0.1:9000 #对应上图 ③ 处配置
  access-key: minioadmin  # 上文创建的AK
  secret-key: minioadmin # 上文创建的SK
  bucket-name: v2-cloud  # 上文创建的桶名称
